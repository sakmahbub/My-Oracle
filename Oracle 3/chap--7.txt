like Operator:
=========
declare
       procedure compare (value varchar2, pattern varchar2) is
       begin
           if value like pattern then
           dbms_output.put_line ('True');
       else
           dbms_output.put_line ('False');
        end if;
     end;
begin
       compare ('Zara Ali', 'Z%A_i');
       compare ('Nuha Ali', 'Z%A_i');

    end;



Between Operator:
==============

declare
    x number(2) := 10;
begin
    if (x between 5 and 20) then 
        dbms_output.put_line ('True');
  else
        dbms_output.put_line ('False');

  end if;



  if (x between 5 and 10) then 
        dbms_output.put_line ('True');
  else
        dbms_output.put_line ('False');

  end if;



   if (x between 11 and 20) then 
        dbms_output.put_line ('True');
  else
        dbms_output.put_line ('False');

  end if;


end;



IN and Null Operator:
================
declare 
     letter varchar2(1) := 'm';
begin
     if (letter in ('a', 'b', 'c')) then
         dbms_output.put_line ('True');
    else
         dbms_output.put_line ('False');

    end if;


     if (letter in ('m', 'n', 'o')) then
         dbms_output.put_line ('True');
    else
         dbms_output.put_line ('False');

    end if;

     if (letter is null) then
          dbms_output.put_line ('True');
    else
         dbms_output.put_line ('False');

     end if;

  end;

Logical Operator:
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

declare 
    a boolean := true;
    b boolean := false;
begin
     if (a and b) then
     dbms_output.put_line ('line 1 - Condition is True');
     end if;


     if (a or b) then
     dbms_output.put_line ('line 2 - Condition is True');
     end if;

     if (not a) then
     dbms_output.put_line ('line 3 - a is not True');
  else
     dbms_output.put_line ('line 3 - a is True');
      end if;

 
    if (not b) then
     dbms_output.put_line ('line 3 - b is not True');
  else
     dbms_output.put_line ('line 3 - b is True');
      end if;


end;


















